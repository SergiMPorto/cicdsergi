version: 2.1

executors:
  java_executor:
    docker:
      - image: cimg/openjdk:21.0
    working_directory: ~/project/

jobs:
  build:
    executor: java_executor
    steps:
      - checkout
      - run:
          name: Ver versiÃ³n de Java
          command: java -version
      - run:
          name: Compilar clases Java
          command: javac -d target/classes NumeroPrimoAPP/src/main/java/Laboratorio/*.java
      - persist_to_workspace:
          root: target
          paths:
            - classes

  show_files:
    executor: java_executor
    steps:
      - checkout
      - run:
          name: Mostrar archivos fuente
          command: ls -R NumeroPrimoAPP/src/main/java/Laboratorio

  test:
    executor: java_executor
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run:
          name: Download JUnit 5
          command: |
            mkdir -p libs
            curl -L -o libs/junit.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.0/junit-platform-console-standalone-1.10.0.jar
      - run:
          name: Compilar test
          command: |
            find NumeroPrimoAPP/src/test/java -name "*.java" > test_sources.txt
            javac -cp "libs/junit.jar:target/classes" -d target/test-classes @test_sources.txt
      - run:
          name: Ejecutar test
          command: java -jar libs/junit.jar --class-path target/classes:target/test-classes --scan-class-path

  testandlint:
    executor: java_executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: cd NumeroPrimoAPP && mvn clean install -Prelease
      - run:
          name: Run tests
          command: cd NumeroPrimoAPP && mvn test
      - run:
          name: Run Checkstyle
          command: cd NumeroPrimoAPP && mvn checkstyle:check
      - run:
          name: Run Jacoco and generate report
          command: cd NumeroPrimoAPP && mvn verify 
      - store_artifacts:
          name: Upload .jar artifact
          path: NumeroPrimoAPP/target/NumeroPrimoAPP-v1.0-SNAPSHOT.jar
          destination: jar-release
      - run:
          name: Run SonarQube
          command: |
            cd NumeroPrimoAPP && mvn sonar:sonar \
            -Dsonar.projectKey=SergiMPorto_cicdsergi \
            -Dsonar.organization=sergimporto \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN}


  release:
     executor: java_executor
     steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: testing archive .jar
          command: ls -lh NumeroPrimoAPP/target/
      - run:
          name: Upload artifact to GitHub Releases
          command: |
            TAG="v1.0.0"
            FILE="NumeroPrimoAPP/target/NumeroPrimoAPP-1.0-SNAPSHOT.jar"
            REPO="SergiMPorto/cicdsergi"

            echo "Creating release $TAG on GitHub..."

            curl -X POST https://api.github.com/repos/$REPO/releases \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"tag_name\": \"$TAG\", \"name\": \"$TAG\", \"draft\": false, \"prerelease\": false}" || true

            UPLOAD_URL=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/$REPO/releases/tags/$TAG | jq -r .upload_url | sed "s/{?name,label}//")

            echo "Uploading $FILE to release..."
            curl -X POST "$UPLOAD_URL?name=$(basename $FILE)" \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/java-archive" \
              --data-binary @"$FILE"



  security:
    executor: java_executor
    steps:
      - checkout
      - run:
          name: Install ggshield
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip3 install --upgrade ggshield
      - run:
          name: Run GitGuardian secret scan
          command: ggshield secret scan repo .
 



workflows:
  testing_workflow:
    jobs:
      - build
      - show_files
      - test:
          requires:
            - build
      - testandlint:
          requires:
            - build
          context: SonarCloud
      - release:
          requires:
            - testandlint
          context: GitHub Releases
          filters:
            branches:
              only:
                - master
      - security:
          requires:
            - build
          context: GitGuardian



